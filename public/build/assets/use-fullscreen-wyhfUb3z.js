import{G as v,a0 as h,a1 as k,N as q,I as y,k as m,H as F,r as x,bs as B,h as b,bt as p,bk as $,i as C,j as w}from"./app-D7l4nzeD.js";const _=["horizontal","vertical","cell","none"],E=v({name:"QMarkupTable",props:{...h,dense:Boolean,flat:Boolean,bordered:Boolean,square:Boolean,wrapCells:Boolean,separator:{type:String,default:"horizontal",validator:e=>_.includes(e)}},setup(e,{slots:r}){const o=q(),l=k(e,o.proxy.$q),t=y(()=>`q-markup-table q-table__container q-table__card q-table--${e.separator}-separator`+(l.value===!0?" q-table--dark q-table__card--dark q-dark":"")+(e.dense===!0?" q-table--dense":"")+(e.flat===!0?" q-table--flat":"")+(e.bordered===!0?" q-table--bordered":"")+(e.square===!0?" q-table--square":"")+(e.wrapCells===!1?" q-table--no-wrap":""));return()=>m("div",{class:t.value},[m("table",{class:"q-table"},F(r.default))])}});let n=0;const M={fullscreen:Boolean,noRouteFullscreenExit:Boolean},I=["update:fullscreen","fullscreen"];function D(){const e=q(),{props:r,emit:o,proxy:l}=e;let t,c,i;const a=x(!1);B(e)===!0&&b(()=>l.$route.fullPath,()=>{r.noRouteFullscreenExit!==!0&&s()}),b(()=>r.fullscreen,u=>{a.value!==u&&d()}),b(a,u=>{o("update:fullscreen",u),o("fullscreen",u)});function d(){a.value===!0?s():f()}function f(){a.value!==!0&&(a.value=!0,i=l.$el.parentNode,i.replaceChild(c,l.$el),document.body.appendChild(l.$el),n++,n===1&&document.body.classList.add("q-body--fullscreen-mixin"),t={handler:s},p.add(t))}function s(){a.value===!0&&(t!==void 0&&(p.remove(t),t=void 0),i.replaceChild(l.$el,c),a.value=!1,n=Math.max(0,n-1),n===0&&(document.body.classList.remove("q-body--fullscreen-mixin"),l.$el.scrollIntoView!==void 0&&setTimeout(()=>{l.$el.scrollIntoView()})))}return $(()=>{c=document.createElement("span")}),C(()=>{r.fullscreen===!0&&f()}),w(s),Object.assign(l,{toggleFullscreen:d,setFullscreen:f,exitFullscreen:s}),{inFullscreen:a,toggleFullscreen:d}}export{E as Q,M as a,D as b,I as u};
